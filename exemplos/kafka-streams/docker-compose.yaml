version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./data/zookeeper/data:/var/lib/zookeeper/data 
      - ./data/zookeeper/log:/var/lib/zookeeper/log 
      - ./data/zookeeper/secrets:/etc/zookeeper/secrets

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    networks: 
      - net
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT_HOST://0.0.0.0:9092, PLAINTEXT://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - net
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9093

  dotnet-streams:
    container_name: dotnet-streams
    build: 
      context: ./../
      dockerfile: DockerFile
    tty: true
    networks: 
      - net
    volumes:
      - ./dotnet:/projetos
  db:
    image: mysql
    container_name: mysql-streams
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "2019:3306"
    volumes: 
      - ./data/mysql:/var/lib/mysql
    networks: 
      - net
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: streams
      MYSQL_USER: teste
      MYSQL_PASSWORD: teste

#networks:
#  broker-kafka:
#    external:
#      name: broker-kafka
networks: 
  net:
    driver: bridge